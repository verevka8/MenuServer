version: '3'

services:
  app1:
    image: menu_server:latest
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
  app2:
    image: menu_server:latest
    ports:
      - "8081:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"    # Порт для RabbitMQ Management UI
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_stomp &&
               rabbitmq-plugins enable --offline rabbitmq_web_stomp &&
               rabbitmq-server"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis_menu_app:latest
    container_name: redis
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
volumes:
  redis_data: