version: '3.7'

services:
  traefik:
    image: verevka/traefik_menu_app:latest
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/traefik_dynamic.yml
      - --entrypoints.web.address=:80
      - --api.insecure=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - app1
      - app2

  app1:
    image: verevka/menu_app:latest
    labels:
      - "traefik.enable=false"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  app2:
    image: verevka/menu_app:latest
    labels:
      - "traefik.enable=false"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  rabbitmq:
    image: verevka/rabbimq_menu_app:latest
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "61613:61613"
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_stomp &&
               rabbitmq-plugins enable --offline rabbitmq_web_stomp &&
               rabbitmq-server"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: verevka/redis_menu_app:latest
    container_name: redis
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
